#!/usr/bin/env node

'use strict';

var fs = require('fs');
var prompt = require('prompt');
var yaml = require('yamljs');
var path = require('path');
var rcfile = path.join(getUserHome(), '.lob');
var rc = {};

if (fs.existsSync(rcfile)) {
  rc = yaml.load(rcfile);
  parse();
} else {
  console.log('Please enter your Lobste.rs credentials. You only need to do this once.');
  prompt.start();
  prompt.message = prompt.delimiter = '';
  prompt.get({
    properties: {
      username: { description: 'Username: ', required: true },
      password: { description: 'Password: ', required: true, hidden: true }
    }
  }, prompted);
}

function prompted (err, data) {
  if (err) {
    return;
  }
  fs.writeFileSync(rcfile, yaml.stringify(data, 2), 'utf8');
  rc = data;
  console.log('Your credentials have been stored at: %s\nYou can edit them anytime.', rcfile);
  parse();
}

function parse () {
  var argv = require('minimist')(process.argv.slice(2), {
    alias: {
      title: ['t'],
      url: ['u', 'uri'],
      description: ['d', 'desc'],
      author: ['a']
    }
  });
  var okay = 'title' in argv && ('url' in argv || 'description' in argv);
  if (okay === false) {
    usage(); return;
  }

  post(argv);
}

function usage () {
  console.log([
    'Usage:',
    '  lob <options>',
    '',
    'Options:',
    '  -t, --title               | Title for the story',
    '  -u, --url, --uri          | URL to the story',
    '  -d, --desc, --description | Text describing the story',
    '  --tags                    | Tags for the story',
    '  --author, --no-author     | Whether you\'re the author for the story'
  ].join('\n'));
}

function post (argv) {
  var submit = require('..');

  submit({
    username: rc.username,
    password: rc.password,
    title: argv.title,
    tags: argv.tags.split(' '),
    url: argv.url,
    description: argv.description,
    author: argv.author
  }, done);
}

function done (err, res, body, discuss) {
  if (err) {
    console.error('Error! %s\n%s', err.message, err.stack);
    process.exit(1);
  } else {
    console.log(discuss);
    process.exit(0);
  }
}

function getUserHome () {
  var win = process.platform === 'win32';
  return process.env[win ? 'USERPROFILE' : 'HOME'];
}
